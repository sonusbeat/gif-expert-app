{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","Helpers/getGifs.js","hooks/useFetchGifs.jsx","components/GifGrid.jsx","GifExpertApp.jsx","index.jsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","className","type","value","onChange","target","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"gOAkCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAkBzC,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAMC,iBAEHJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAMhB,SACE,uBACEO,UAAU,eACVC,KAAK,OACLC,MAAQV,EACRW,SArBoB,SAACR,GACzBF,EAAcE,EAAMS,OAAOF,a,QCChBG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,sBAAKP,UAAU,yCAAf,UACE,qBAAKQ,IAAKD,EAAKE,IAAMH,IACrB,4BAAKA,Q,uBCYII,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRL,EADQ,iDAC6CM,UAAUF,GADvD,8DAESG,MAAOP,GAFhB,cAERQ,EAFQ,gBAGSA,EAASC,OAHlB,uBAGNC,EAHM,EAGNA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QATxB,kBAaPW,GAbO,4CAAH,sDCqBEM,EAlBM,SAAAb,GAAa,IAAD,EACLpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAHoB,mBACxBC,EADwB,KACjBC,EADiB,KAe/B,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAAAC,GACrBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAAEd,IAEEe,GCQMK,EAvBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,EACEa,EAAab,GAAjCW,EADkB,EACxBL,KAAcQ,EADU,EACVA,QAEtB,OACE,oCACE,oBAAIzB,UAAU,gDAAd,SAAgEW,IAG9Dc,GACA,mBAAGzB,UAAU,+CAAb,yBAGF,sBAAMA,UAAU,YAAhB,SAEIsB,EAAOH,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aCQpBW,EArBM,WAAO,IAAD,EACazC,mBAAS,IADtB,mBACjBQ,EADiB,KACLT,EADK,KAGzB,OACE,sBAAKU,UAAU,YAAf,UACE,iDAEA,cAAC,EAAD,CAAaV,cAAgBA,IAE7B,uBAGES,EAAWoB,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,U,MCVxBsB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cce4a1b2.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(inputValue.trim().length > 2) {\n      setCategories(categories => [ inputValue, ...categories ]);\n      setInputValue('');\n    }\n\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n}\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={ title } />\n      <p>{ title }</p>\n    </div>\n  );\n}\n\nexport default GifGridItem;","const getGifs = async (category) => {\n  const url      = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=4&api_key=1LMZhLzPv822rLWSezIbmvbTvoYZowKo`;\n  const response = await fetch( url );\n  const { data } = await response.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    };\n  });\n\n  return gifs;\n};\n\nexport default getGifs;","import { useState, useEffect } from 'react';\nimport getGifs from '../Helpers/getGifs';\n\nconst useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n      setState({\n        data: imgs,\n        loading: false\n      })\n    });\n  }, [ category ]);\n\n  return state;\n}\n\nexport default useFetchGifs;","import GifGridItem from './GifGridItem';\nimport useFetchGifs from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <section>\n      <h3 className=\"text-center animate__animated animate__fadeIn\">{ category }</h3>\n\n      {\n        loading &&\n        <p className=\"text-center animate__animated animate__flash\">Loading ...</p>\n      }\n\n      <main className=\"card-grid\">\n        {\n          images.map(img => (\n            <GifGridItem key={ img.id } { ...img } />\n          ))\n        }\n      </main>\n    </section>\n  );\n}\n\nexport default GifGrid;","import { useState } from \"react\";\nimport \"./GifExpertApp.scss\";\nimport AddCategory from './components/AddCategory';\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [ categories, setCategories ] = useState([]);\n\n  return (\n    <div className=\"container\">\n      <h1>Gift Expert App</h1>\n\n      <AddCategory setCategories={ setCategories } />\n\n      <hr />\n\n      {\n        categories.map(category => (\n          <GifGrid key={category} category={ category } />\n        ))\n      }\n\n    </div>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.scss\";\n\n// API Key\n// 1LMZhLzPv822rLWSezIbmvbTvoYZowKo\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}