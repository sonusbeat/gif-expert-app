{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","hooks/useFetchGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","GifExpertApp.jsx","index.jsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","className","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","src","alt","GifGrid","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAMC,iBAEDJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,UAAU,OACVC,MAAQV,EACRW,SApBoB,SAACR,GACzBF,EAAcE,EAAMS,OAAOF,a,+BCFlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,8DAEEI,MAAMF,GAFR,cAEfG,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,MAA4B,CAChDF,KACAC,QACAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QARX,kBAWdM,GAXc,4CAAH,sDCeLM,EAlBM,SAAAd,GAAa,IAAD,EACLf,mBAAS,CACjCsB,KAAM,GACNQ,SAAS,IAHoB,mBACxBC,EADwB,KACjBC,EADiB,KAe/B,OATAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAAAP,GAAM,OAC3BK,EAAS,CACPV,KAAMK,EACNG,SAAS,SAGZ,CAACf,IAEGgB,GCRMI,EAVK,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAE5B,OACE,yBAAQP,UAAU,yCAAlB,UACE,qBAAK0B,IAAMnB,EAAMoB,IAAMX,IACvB,4BAAYhB,UAAU,cAAtB,SAAsCgB,QCgB7BY,EAlBC,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,EACCc,EAAad,GAAjCY,EADmB,EACxBL,KAAaQ,EADW,EACXA,QAErB,OACE,qCACE,oBAAIpB,UAAU,iEAAd,SAAgFK,IAE9Ee,GAAW,mBAAGpB,UAAU,mCAAb,+BAEb,qBAAKA,UAAU,YAAf,SACGiB,EAAOH,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAId,aCiBjBe,EA3BM,WAAO,IAAD,EACWxC,mBAAS,CAAC,oBADrB,mBAClBQ,EADkB,KACNT,EADM,KAUzB,OACE,qCACE,oBAAIW,UAAU,cAAd,4BACA,uBAEA,cAAC,EAAD,CAAaX,cAAeA,IAE3BS,EAAWgB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,UCfhB0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03a80075.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if ( inputValue.trim().length > 2) {\n      // setCategories( [ ...categories, 'Saint Seiya' ] );\n      setCategories( categories => [ inputValue, ...categories ] );\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        className=\"mb-2\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  );\n};\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};","/**\n * Get gif from api\n *\n * @param {string} category\n * @return {Promise}\n */\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=1LMZhLzPv822rLWSezIbmvbTvoYZowKo`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n\n  const gifs = data.map(({ id, title, images }) => ({\n    id,\n    title,\n    url: images?.downsized_medium.url,\n  }));\n\n  return gifs;\n};","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nconst useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then(images =>\n      setState({\n        data: images,\n        loading: false,\n      })\n    );\n  }, [category]);\n\n  return state;\n};\n\nexport default useFetchGifs;\n","const GifGridItem = ({ title, url }) => {\n\n  return (\n    <figure className=\"card animate__animated animate__fadeIn\">\n      <img src={ url } alt={ title } />\n      <figcaption className=\"card__title\">{ title }</figcaption>\n    </figure>\n  );\n}\n\nexport default GifGridItem;","import useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"text-center capitalize-words animate__animated animate__fadeIn\">{category}</h3>\n\n      { loading && <p className=\"animate__animated animate__flash\">Fetching Data ...</p> }\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState } from \"react\";\nimport AddCategory from './components/AddCategory';\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"my hero academy\"]);\n\n  // const handleAdd = () => {\n  //\n  //   setCategories(categories => ['Saint Seiya', ...categories]);\n\n  //   console.log(categories);\n  // };\n\n  return (\n    <>\n      <h1 className=\"text-center\">Gif Expert App</h1>\n      <hr />\n\n      <AddCategory setCategories={setCategories} />\n\n      {categories.map(category => (\n        <GifGrid\n          key={ category }\n          category={ category }\n        />\n      ))}\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n// API Key\n// 1LMZhLzPv822rLWSezIbmvbTvoYZowKo\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}